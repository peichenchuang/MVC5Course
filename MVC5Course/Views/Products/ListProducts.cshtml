@model IEnumerable<MVC5Course.Models.ViewModels.ProductListVM>

@{
    ViewBag.Title = "ProductList";
}

@if(TempData["CreateProduct_Result"] !=  null)
{
    <h2>@TempData["CreateProduct_Result"]</h2>
}

<h2>ProductList</h2>
<form method="GET">
    @* 表單送出，只要有model binding就會有model state *@
    篩選：
    @Html.TextBox("q")
    庫存數量
    @Html.TextBox("stockMin", "0", new { placeholder = "最小庫存量", minimum = 0})
    -
    @Html.TextBox("stockMax", "", new { placeholder = "最大庫存量" })
    <button>送出</button>
</form>


@using (Html.BeginForm("BatchUpdate"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Stock)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.EditorFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.EditorFor(modelItem => item.Stock)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>
            </tr>
        }

    </table>
}

